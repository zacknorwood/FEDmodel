******************************************************************************
*----------------------------Define equations--------------------------------
******************************************************************************
equation

           eq_VKA11     heating generation of VKA4
           eq_VKA12     cooling generation of VKA4
           eq_VKA13     maximum electricity usage by VKA4
           eq_VKA41     heating generation of VKA4
           eq_VKA42     cooling generation of VKA4
           eq_VKA43     maximum electricity usage by VKA4

           eq_AbsC1     for determining capacity of AR
           eq_AbsC2     relates cooling from AR

           eq_RM1       Refrigerator equation
           eq_RM2       Refrigerator equation

           eq_RMMC1     MC2 Refrigerator equation
           eq_RMMC2     MC2 investment constraint

           eq_ACC1      Refrigerator equation
           eq_ACC2      Refrigerator equation

           eq1_AbsCInv  Production equation
           eq2_AbsCInv  Investment capacity
           eq3_AbsCInv  Binary constraint

           eq1_P2       production equation for P2
           eq2_P2       investment equation for P2

           eq1_TURB     production equation for turbine-gen
           eq2_TURB     energy consumption equation for turbine-gen
           eq3_TURB     investment equation for turbine-gen

           eq_HP1       heat production from HP
           eq_HP2       cooling production from HP
           eq_HP3       for determining capacity of HP

           eq_TESen1    initial energy content of the TES
           eq_TESen2    energy content of the TES at hour h
           eq_TESen3    for determining the capacity of TES
           eq_TESdis    discharging rate of the TES
           eq_TESch     charging rate of the TES
           eq_TESinv    investment decision for TES
           eq_TESmininv minimum possible investment in TES

           eq_BTES_Sch   charging rate of shallow part the building
           eq_BTES_Sdis  discharging rate of shallow part the building
           eq_BTES_Sen1  initial energy content of shallow part of the building
           eq_BTES_Sen2  energy content of shallow part of the building at hour h
           eq_BTES_Sloss loss of the shallow part of the building at hour h [8-17]
           eq_BTES_Den1  initial energy content of deep part of the building
           eq_BTES_Den2  energy content of deep part of the building at hour h
           eq_BTES_Dloss loss of the deep part of the building at hour h
           eq_BS_BD      energy flow between the shallow and deep part of the building

           eq_BES1       intial energy in the Battery
           eq_BES2       energy in the Battery at hour h
           eq_BES3       maximum energy in the Battery
           eq_BES_ch     maximum charging limit
           eq_BES_dis    maximum discharign limit

           eq_PV         electricity generated by PV
           eq_PV_cap_roof capacity of installed PV on roofs
           eq_PV_cap_facade capacity of installed PV on facades
           eq_area_roof  area of installed PV on roofs
           eq_area_facade area of installed PV on facades

           eq_hbalance   heating supply-demand balance
           eq_hbalance2  heating supply-demand balance excluding nonAH buildings
           eq_cbalance   Balance equation cooling
           eq_ebalance   electrical supply-demand balance

           eq_PE         FED PE(Primary energy) use
           eq_CO2        FED CO2 emission

           eq_max_exG(h,m) maximum monthly peak demand
           eq_PTexG(m)   monthly power tariff

           eq_mean_DH(d) daily mean power DH
           eq_PT_DH(d)      power tariff DH

           eq_invCost    with aim to minimize total cost
           eq_totCost    with aim to minimize total cost
;

*-----------------------------------------------------------------------------
*--------------------------Define equations-----------------------------------
*-----------------------------------------------------------------------------

***************For Existing units***********************************************
*-----------------VKA4 equations------------------------------------------------

eq_VKA11(h)..
        H_VKA1(h) =l= VKA1_H_COP*el_VKA1(h);
eq_VKA12(h)..
        C_VKA1(h) =l= VKA1_C_COP*el_VKA1(h);
eq_VKA13(h)..
        el_VKA1(h) =l= VKA1_el_cap;
*-----------------VKA4 equations------------------------------------------------

eq_VKA41(h)..
        H_VKA4(h) =l= VKA4_H_COP*el_VKA4(h);
eq_VKA42(h)..
        C_VKA4(h) =l= VKA4_C_COP*el_VKA4(h);
eq_VKA43(h)..
        el_VKA4(h) =l= VKA4_el_cap;
*-----------AbsC (Absorbtion Chiller) equations  (Heat => cooling )-------------

eq_AbsC1(h)..
             k_AbsC(h) =e= AbsC_COP*q_AbsC(h)*AbsC_eff;
eq_AbsC2(h)..
             k_AbsC(h) =l= AbsC_cap;
*----------Refregerator Machine equations (electricity => cooling)--------------

eq_RM1(h)..
             k_RM(h) =e= RM_COP*e_RM(h);
eq_RM2(h)..
             k_RM(h) =l= RM_cap;
*----------MC2 Refrigerator Machine equations (electricity => cooling)----------

eq_RMMC1(h)..
         k_RMMC(h) =e= sw_RMMC * RMCC_COP * e_RMMC(h);

eq_RMMC2(h)..
         k_RMMC(h) =l= RMMC_inv * cap_sup_unit('RMMC');
********** Ambient Air Cooling Machine equations (electricity => cooling)-------

eq_ACC1(h)..
             k_AAC(h) =e= AAC_COP*e_AAC(h);
eq_ACC2(h)..
             k_AAC(h) =l= AAC_cap;
*****************For new investment optonss-------------------------------------
*----------------Absorption Chiller Investment----------------------------------

eq1_AbsCInv(h)..
             k_AbsCInv(h) =e= AbsCInv_COP*q_AbsCInv(h)*AbsC_eff;
eq2_AbsCInv(h)..
             k_AbsCInv(h) =l= AbsCInv_cap;
eq3_AbsCInv(h)..
             k_AbsCInv(h) =l= B_AbsCInv * AbsCInv_MaxCap;
*----------------Panna 2 equations ---------------------------------------------

eq1_P2(h)..
         H_P2(h) =e= sw_P2 * q_P2(h) * P2_eff;
eq2_P2(h)..
         q_P2(h) =l= B_P2 * q_P2_cap;
*----------------Refurb turbine equations --------------------------------------

eq1_TURB(h)..
         e_TURB(h) =e= sw_TURB * TURB_eff * q_TURB(h);

eq2_TURB(h)..
         H_P2T(h) =l= H_P2(h) - q_TURB(h);

eq3_TURB(h)..
         e_TURB(h) =l= TURB_cap * B_TURB;
*----------------HP equations --------------------------------------------------

eq_HP1(h)$(sw_HP eq 1)..
             q_HP(h) =e= sw_HP*HP_H_COP*e_HP(h);
eq_HP2(h)$(sw_HP eq 1)..
             c_HP(h) =l= sw_HP*HP_C_COP*e_HP(h);
eq_HP3(h)$(sw_HP eq 1)..
             q_HP(h) =l= sw_HP*HP_cap;
*------------------TES equations------------------------------------------------

eq_TESen1(h,i)$(ord(h) eq 1)..
             TES_en('H1') =e= sw_TES*TES_cap*TES_density;
eq_TESen2(h)$(ord(h) gt 1)..
             TES_en(h) =e= sw_TES*(TES_en(h-1)+TES_ch(h)-TES_dis(h));
eq_TESen3(h)$(sw_HP eq 1)..
             TES_en(h) =l= sw_HP*TES_cap*TES_density;
eq_TESch(h)$(sw_HP eq 1)..
             TES_ch(h) =l= sw_HP*TES_inv * TES_ch_max;
eq_TESdis(h)$(sw_HP eq 1)..
             TES_dis(h) =l= sw_HP*TES_inv * TES_dis_max;
eq_TESinv(h)$(sw_HP eq 1)..
             TES_cap =l= sw_HP*TES_inv * TES_max_cap * TES_density;
eq_TESmininv $(sw_HP eq 1)..
             TES_cap =G= sw_HP*TES_inv * 100;
*------------------BTES equations (Building srorage)----------------------------

eq_BTES_Sen1(h,i) $ (ord(h) eq 1)..
         BTES_Sen(h,i) =e= sw_BTES*BTES_Sen_int(i);
eq_BTES_Sch(h,i) $ (sw_BTES ne 0)..
         BTES_Sch(h,i) =l= sw_BTES*B_BITES(i)*BTES_Sch_max(h,i);
eq_BTES_Sdis(h,i) $ (sw_BTES ne 0)..
         BTES_Sdis(h,i) =l= sw_BTES*B_BITES(i)*BTES_Sdis_max(h,i);
eq_BTES_Sloss(h,i)$ (ord(h) gt 1)..
         BTES_Sloss(h,i) =e= sw_BTES*BTES_Sen(h-1,i)*BTES_kSloss(h-1,i);
eq_BTES_Sen2(h,i) $ (ord(h) gt 1)..
         BTES_Sen(h,i) =e= sw_BTES*(BTES_Sen(h-1,i) - BTES_Sdis(h,i)/BTES_Sdis_eff
                           + BTES_Sch(h,i)*BTES_Sch_eff - link_BS_BD(h,i) - BTES_Sloss(h,i));
eq_BTES_Den1(h,i) $ (ord(h) eq 1)..
         BTES_Den(h,i) =e= sw_BTES*BTES_Den_int(i);
eq_BTES_Dloss(h,i) $ (ord(h) gt 1)..
         BTES_Dloss(h,i) =e= sw_BTES*BTES_Den(h-1,i)*BTES_kDloss(h-1,i);
eq_BTES_Den2(h,i) $ (ord(h) gt 1)..
         BTES_Den(h,i) =e= sw_BTES*(BTES_Den(h-1,i) + link_BS_BD(h,i) - BTES_Dloss(h,i));
eq_BS_BD(h,i) $ (BTES_model('BTES_Scap',i) ne 0)..
         link_BS_BD(h,i) =e= sw_BTES*((BTES_Sen(h,i)/BTES_model('BTES_Scap',i)
                              - BTES_Den(h,i)/BTES_model('BTES_Dcap',i))*BTES_model('K_BS_BD',i));
*-----------------Battery constraints-------------------------------------------

eq_BES1(h) $ (ord(h) eq 1)..
             BES_en(h)=e=sw_BES*BES_cap;
eq_BES2(h)$(ord(h) gt 1)..
             BES_en(h)=e=sw_BES*(BES_en(h-1)+BES_ch(h)-BES_dis(h));
eq_BES3(h) $ (sw_BTES ne 0)..
             BES_en(h)=l=sw_BES*BES_cap;
eq_BES_ch(h) $ (sw_BTES ne 0)..
*Assuming 1C charding
             BES_ch(h)=l=sw_BES*(BES_cap-BES_en(h));
eq_BES_dis(h)..
*Assuming 1C discharging
             BES_dis(h)=l=sw_BES*BES_en(h);
*-----------------Solar PV equations--------------------------------------------

eq_PV(h)..
            // e_PV(h)=e= nPV_ird(h)*PV_cap;

             eq_PV(h)=e= sum(BID, area_roof(BID)*Gekv_roof(BID,h)*(1 + coef_Si(1)*log10(Gekv_roof(BID,h)) + coef_Si(2).*sqr(log10(Gekv_roof(BID,h))) + coef_Si(3)*Tekv_roof(BID,h) + coef_Si(4)*Tekv_roof(BID,h)*log10(Gekv_roof(BID,h)) + coef_Si(5)*sqr(Tekv_roof(BID,h)*log10(Gekv_roof(BID,h))) + coef_Si(6).*sqr(Tekv_roof(BID,h))
                            +    area_facade(BID)*Gekv_facade(BID,h)*(1 + coef_Si(1)*log10(Gekv_facade(BID,h)) + coef_Si(2).*sqr(log10(Gekv_facade(BID,h))) + coef_Si(3)*Tekv_facade(BID,h) + coef_Si(4)*Tekv_facade(BID,h)*log10(Gekv_facade(BID,h)) + coef_Si(5)*sqr(Tekv_facade(BID,h)*log10(Gekv_facade(BID,h))) + coef_Si(6).*sqr(Tekv_facade(BID,h)));
eq_PV_cap_roof(BID)..
             PV_cap_roof(BID)=e=area_roof(BID)*PV_cap_density;

eq_PV_cap_facade(BID)..
             PV_cap_facade(BID)=e=area_facade(BID)*PV_cap_density;

eq_area_roof(BID)..
             area_roof(BID)=L=area_roof_max(BID);

eq_area_facade(BID)..
             area_facade(BID)=L=area_facade_max(BID);

**************************Demand Supply constraints*****************************
*---------------- Demand supply balance for heating ----------------------------

eq_hbalance(h)..
             sum(i,q_demand(h,i)) =l=q_DH(h) + tb_2016(h) + H_VKA1(h) + H_VKA4(h) - q_AbsC(h) + H_P2T(h)
                                     + sw_HP*q_HP(h)
                                     + sw_TES*(TES_dis_eff*TES_dis(h)-TES_ch(h)/TES_chr_eff)
                                     + sw_BTES*(sum(i,BTES_Sdis(h,i))*BTES_dis_eff - sum(i,BTES_Sch(h,i))/BTES_chr_eff)
                                     - sw_AbsCInv * q_AbsCInv(h);
eq_hbalance2(h)..
             q_DH(h)=g=sum(i,q_demand_nonAH(h,i));
*-------------- Demand supply balance for cooling ------------------------------

eq_cbalance(h)..
         sum(i,k_demand(h,i))=l=P_DC(h) + C_VKA1(h) + C_VKA4(h) +  k_AbsC(h) + k_RM(h) + k_RMMC(h) + k_AAC(h) + c_HP(h) + sw_AbsCInv * k_AbsCInv(h);
*--------------Demand supply balance for electricity ---------------------------

eq_ebalance(h)..
        sum(i,e_demand(h,i)) =l= e_exG(h) - el_VKA1(h) - el_VKA4(h) - e_RM(h) - e_RMMC(h) - e_AAC(h)
                                 + e0_PV(h) + sw_PV*e_PV(h) - sw_HP*e_HP(h)
                                 + sw_BTES*(BES_dis(h)*BES_dis_eff - BES_ch(h)/BES_ch_eff)
                                 + sw_TURB * e_TURB(h);
*--------------FED Primary energy use-------------------------------------------

eq_PE..
       FED_PE =e= sum(h,e_exG(h)*PEF_exG(h))
                  + sum(h,e0_PV(h)*PEF_loc('PV')) + sw_PV*sum(h,e_PV(h)*PEF_loc('PV'))
                  + sum(h,q_DH(h)*PEF_DH(h)) + sum(h,tb_2016(h)*PEF_loc('TB'))
                  + sum(h,q_P2(h)*PEF_loc('P2'));
*---------------FED CO2 emission------------------------------------------------

eq_CO2(h)..
       FED_CO2(h) =e= e_exG(h)*CO2F_exG(h)
                      + e0_PV(h)*CO2F_loc('PV') + sw_PV*e_PV(h)*CO2F_loc('PV')
                      + q_DH(h)*CO2F_DH(h) + tb_2016(h)*CO2F_loc('TB')
                      + q_P2(h) * CO2F_loc('P2');
**************** Power tariffs *******************
eq_max_exG(h,m)..
max_exG(m) =g=   e_exG(h)*HoM(h,m);
eq_PTexG(m)..
PT_exG(m) =e= max_exG(m)*PT_cost('exG');


eq_mean_DH(d)..
mean_DH(d) =g=   sum(h,q_DH(h)*HoD(h,d))/24;

eq_PT_DH(d)..
PT_DH      =g=   mean_DH(d)*PT_cost('DH');

**************** Objective function ***********************

eq_totCost..
         TC =e= sum(h,q_DH(h)*utot_cost('DH',h))
                + sum(h,e_exG(h)*utot_cost('exG',h))
                + sum(h,tb_2016(h)*utot_cost('TB',h)/0.9)
                + sum(h, q_P2(h)*utot_cost('P2',h))
                + sum(m,PT_exG(m)) + PT_DH

                + sw_HP*HP_cap*Acost_sup_unit('HP')
                + sw_PV*PV_cap_roof*Acost_sup_unit('PV')
                + sw_PV*PV_cap_facade*Acost_sup_unit('PV')
                + sw_BES*BES_cap*Acost_sup_unit('BES')
                + sw_TES*(TES_cap*TES_vr_cost + TES_inv * TES_fx_cost)/25
                + sw_BTES*Acost_sup_unit('BTES')*sum(i,B_BITES(i))
                + sw_RMMC*RMMC_inv*Acost_sup_unit('RMMC')
                + sw_P2 * B_P2 * Acost_sup_unit('P2')
                + sw_TURB * B_TURB * Acost_sup_unit('TURB')
                + sw_AbsCInv * (B_AbsCInv *AbsCInv_fx + AbsCInv_cap * Acost_sup_unit('AbsCInv'))
                ;

// Remove hard coding of lifetimes, make this a set
eq_invCost..
         invCost =e= sw_HP*HP_cap*Acost_sup_unit('HP')*15
                     + sw_PV*PV_cap_roof*Acost_sup_unit('PV')*30
                     + sw_PV*PV_cap_facade*Acost_sup_unit('PV')*30
                     + sw_BES*BES_cap*Acost_sup_unit('BES')*15
                     + sw_TES*((TES_cap*TES_vr_cost + TES_inv * TES_fx_cost))
                     + sw_BTES*Acost_sup_unit('BTES')*sum(i,B_BITES(i))*30
                     + sw_RMMC*RMMC_inv*Acost_sup_unit('RMMC')*20
                     + sw_P2 * B_P2 * Acost_sup_unit('P2') * 30
                     + sw_TURB * B_TURB * Acost_sup_unit('TURB') * 30
                     + sw_AbsCInv * (B_AbsCInv *AbsCInv_fx + AbsCInv_cap * Acost_sup_unit('AbsCInv')) * 25 ;
********************************************************************************
