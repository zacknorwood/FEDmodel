function [y1] = fj_VOV1_final(x1)
%FJ_VOV1_FINAL neural network simulation function.
%
% Auto-generated by MATLAB, 08-May-2019 10:19:26.
% 
% [y1] = fj_VOV1_final(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% With 
%   Row 1: Outdoor temperature in Celsius
%   Row 2: Month [1-12]
%   Row 3: Workday or non-workday [1 = workday, 0 = non-workday] 
%   Row 4: Time of day [1-24, with 24 = 00 is treated as the start of the
%          year, i.e., the first hour of the year has value 24. This since
%          the logged value for that time is primarly between 23 -24 the
%          day before]
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-11.9;0;0;1];
x1_step1.gain = [0.0467289719626168;0.166666666666667;2;0.0869565217391304];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.919409444873434456;3.2423778715535904738;2.9626226170865463949;3.4889299588590385603;2.682713647070257057;2.4369177232064509475;3.0455482259356969621;-1.5358779970830001016;-0.83854898142040912301;-1.0510098101047202768;-0.018517479983625659973;-0.82012361785654730451;-1.173924912142328747;0.14941164426035458135;0.3661941568872560393;-0.29495687195062231245;-1.1430404521376555937;1.3294205147760298491;1.3931295340611167255;-1.2650945262049684281;0.71066675345724750201;-3.3158957188085751433;-2.2269082422247397091;2.1325589992309668119;-2.9637258024699359993;-1.8088226953486388204;-6.341805512473574602;-3.2497211026841248405;7.1758632534446089579;3.9655942669716774951];
IW1_1 = [3.5896486755401109114 -3.259662207499772979 1.6113480886854898433 -0.43637632829369077392;-1.4977685158149596223 -2.1718896168009815817 -2.6287285682484755611 0.33385967156245893728;-0.67066063373195716757 2.3534225595129028008 -0.31913708358010445254 1.4259951863586155518;-0.034358970417081927118 1.5089213687388602914 -1.2915826140447648207 1.3388129505644545958;-0.90631683797158668625 -2.4674978720397362508 -1.0005489903523447914 -0.93537820285108164153;-4.0595853864452209336 3.6807551608040789404 -3.0264844525256338059 -0.12372414319021718399;-3.9510745346801376954 3.6403216731559631114 -3.7110454316831797961 -0.13985410416054122607;1.6682400111560979905 0.33162742700030117815 -0.99804225855632755504 -0.89361450774108419637;0.90843949939047596853 -0.56977720206838444739 -1.2867244231013363898 -2.1078435094786662773;0.24889474016154192193 1.2559367368640537155 -1.551527808000919606 0.86503650708878820907;0.25342082420856887337 -0.080011758328980900346 3.775649728363267954 6.3686663490848669511;-0.87328325646845539332 2.5955720315489738681 -3.5110897015029411961 0.40600209283440724661;3.6904444110322645045 -3.5107218710059373556 -0.14025496682358312706 -0.45158830149818302013;0.053237127633034543595 -2.6077229621740536381 -3.6782694922839640483 -0.47184389271102677998;1.4467521571384085455 4.8311359902115889042 3.6328316340187343236 0.1442943121830167208;0.47852934719339829117 2.8759020105103578757 -1.2869790463437094097 1.1138805019632260773;-3.8472825286332685835 -4.5844858500647527322 2.7715383999834779516 0.3001567392847933613;-0.20586520616792555738 -2.6798403845613929519 0.77852248528367395952 -0.67970019282597349264;3.2642114046593451171 3.8138821282428065906 -0.091452493258056696823 0.052800909663603880217;-0.89549715466919033169 -1.7994960763750329491 0.51442359852669083953 5.1422042864434986953;1.2001306969790539458 1.4134876260649829049 -1.0134509485904015236 -1.0447097749097622454;-3.261459790176781226 2.36908647634259939 2.4264824844358496847 -2.8342949261047571952;-3.1646975437670712417 2.6714326936575267801 -3.1930380493969154898 0.33552096471652281817;2.859334850684591256 0.16626762315311621743 -0.3431377831818811508 0.96929716784802333329;-3.6961636453768593746 -2.3950000023737150201 3.0794047603017209447 -2.7169958277799928226;-3.6856174867207518453 -4.6310210054832445792 0.061254663448407915827 -0.022720942370947683209;-0.39083425124239951076 0.072343895800871110824 2.9865386720876201387 -5.7730279852447132782;-1.9333870591958308705 -0.59663991745233824204 1.6674947016749845918 -0.72998792142549240314;-0.35912332415784825601 0.12139832504503741961 3.2795846732070761398 -6.5469145595531461623;2.5736531638037436487 1.6941959934030019763 -1.9051558645126673852 -0.86872364174185168206];

% Layer 2
b2 = -0.09624581779657828684;
LW2_1 = [0.88363294062112873739 -1.0110706176702397574 -1.1733942283835179232 1.5547702185340082082 0.96869145580639670623 -1.5115990267827903448 1.4916965436164781877 -0.69247660157859203256 0.25615137814423410978 -1.1870027707092560831 -1.766734844686542294 2.8569521608264665247 -0.74280725073135855929 -2.1704867970159367196 0.20419321791669481359 0.61551656952688427182 0.22862540674531212082 -0.48046418358101827817 -1.6427189632235930095 -0.041217578297117460351 -0.57171897887078582112 0.12132203674549862926 -1.1251168949084326965 0.52554377043743150111 0.14776395317068730106 -1.3969867057281737388 -2.0321997388569146281 1.6147423602515651453 -1.7406003385750081769 -0.25624933906983288212];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 9.09090909090909;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
